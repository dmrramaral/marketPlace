{
  "info": {
    "name": "MarketPlace API - Collection",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0",
    "description": "Coleção Postman organizada por pastas (Auth, Users, Products, Categories, Cart). Usa collection variables: {{baseUrl}}, {{jwt}}, {{productId}}, {{categoryId}}, {{userId}}, {{ticketId}}"
  },
  "variable": [
    { "key": "baseUrl", "value": "http://localhost:3000" },
    { "key": "jwt", "value": "" },
    { "key": "productId", "value": "" },
    { "key": "categoryId", "value": "" },
    { "key": "userId", "value": "" },
    { "key": "ticketId", "value": "" }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "exec": [
          "// Collection pre-request: sincroniza authHeader e define header Authorization se aplicável (protegido)",
          "(function() {",
          "  try {",
          "    const jwt = pm.collectionVariables.get('jwt');",
          "    if (jwt) {",
          "      pm.collectionVariables.set('authHeader', 'Bearer ' + jwt);",
          "      try { if (pm.request && pm.request.headers && typeof pm.request.headers.upsert === 'function') pm.request.headers.upsert({ key: 'Authorization', value: 'Bearer ' + jwt }); } catch(e) {}",
          "    } else {",
          "      pm.collectionVariables.unset('authHeader');",
          "    }",
          "  } catch (err) { console.log('pre-request guard error', err); }",
          "})();"
        ],
        "type": "text/javascript"
      }
    },
    {
      "listen": "test",
      "script": {
        "exec": [
          "// Collection-level test: extrai token e ids comuns de forma resiliente (com guardas)",
          "(function() {",
          "  try {",
          "    let jsonData = null;",
          "    try { jsonData = pm.response.json(); } catch (e) { /* não-JSON, ignora */ }",
          "    const setIf = (varName, value) => { if (value && !pm.collectionVariables.get(varName)) pm.collectionVariables.set(varName, value); };",
          "    const token = jsonData && (jsonData.token || jsonData.accessToken || jsonData.jwt || (jsonData.data && (jsonData.data.token || jsonData.data.accessToken)));",
          "    if (token) { pm.collectionVariables.set('jwt', token); pm.collectionVariables.set('authHeader', 'Bearer ' + token); }",
          "    const pickId = (obj) => { if (!obj) return null; return obj._id || obj.id || (obj.data && (obj.data._id || obj.data.id)) || (obj.result && (obj.result._id || obj.result.id)) || null; };",
          "    const possibleIds = [];",
          "    if (Array.isArray(jsonData)) { jsonData.forEach(x => { const id = pickId(x); if (id) possibleIds.push(id); }); } else if (jsonData) { const id = pickId(jsonData); if (id) possibleIds.push(id); }",
          "    const url = (pm.request && pm.request.url) ? pm.request.url.toString().toLowerCase() : '';",
          "    const setFirst = (name) => { if (!pm.collectionVariables.get(name) && possibleIds.length) pm.collectionVariables.set(name, possibleIds[0]); };",
          "    if (url.includes('/api/user')) setFirst('userId');",
          "    if (url.includes('/api/product')) setFirst('productId');",
          "    if (url.includes('/api/category')) setFirst('categoryId');",
          "    if (url.includes('/api/cart') || url.includes('/api/ticket') || url.includes('/api/payment')) setFirst('ticketId');",
          "  } catch (err) { console.log('collection test guard error', err); }",
          "})();"
        ],
        "type": "text/javascript"
      }
    }
  ],
  "item": [
    {
      "name": "Auth",
      "item": [
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [ { "key": "Content-Type", "value": "application/json" } ],
            "body": { "mode": "raw", "raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"Senha123!\"\n}" },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": [ "{{baseUrl}}" ],
              "path": [ "api", "auth", "login" ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const jsonData = pm.response.json();",
                  "if (jsonData.token) pm.collectionVariables.set('jwt', jsonData.token);",
                  "else if (jsonData.accessToken) pm.collectionVariables.set('jwt', jsonData.accessToken);",
                  "if (pm.collectionVariables.get('jwt')) pm.collectionVariables.set('authHeader', 'Bearer ' + pm.collectionVariables.get('jwt'));"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "Create User",
          "request": {
            "method": "POST",
            "header": [ { "key": "Content-Type", "value": "application/json" } ],
            "body": { "mode": "raw", "raw": "{\n  \"name\": \"João Silva\",\n  \"email\": \"user@example.com\",\n  \"password\": \"Senha123!\",\n  \"addresses\": [ { \"street\": \"Rua A, 123\", \"city\": \"Cidade\", \"state\": \"SP\", \"zipCode\": \"01234-567\", \"country\": \"BR\" } ]\n}" },
            "url": {
              "raw": "{{baseUrl}}/api/user/create",
              "host": [ "{{baseUrl}}" ],
              "path": [ "api", "user", "create" ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const jsonData = pm.response.json();",
                  "if (jsonData._id) pm.collectionVariables.set('userId', jsonData._id);",
                  "if (jsonData.token) pm.collectionVariables.set('jwt', jsonData.token);",
                  "if (pm.collectionVariables.get('jwt')) pm.collectionVariables.set('authHeader', 'Bearer ' + pm.collectionVariables.get('jwt'));"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [ { "key": "Authorization", "value": "{{authHeader}}" } ],
            "url": {
              "raw": "{{baseUrl}}/api/user",
              "host": [ "{{baseUrl}}" ],
              "path": [ "api", "user" ]
            }
          }
        }
      ]
    },
    {
      "name": "Categories",
      "item": [
        {
          "name": "Create Category",
          "request": {
            "method": "POST",
            "header": [ { "key": "Content-Type", "value": "application/json" }, { "key": "Authorization", "value": "{{authHeader}}" } ],
            "body": { "mode": "raw", "raw": "{\n  \"name\": \"Masculino\",\n  \"description\": \"Categoria de calçados masculinos\"\n}" },
            "url": {
              "raw": "{{baseUrl}}/api/category/categories/create",
              "host": [ "{{baseUrl}}" ],
              "path": [ "api", "category", "categories", "create" ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const jsonData = pm.response.json();",
                  "if (jsonData._id) pm.collectionVariables.set('categoryId', jsonData._id);"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "List Categories",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/category/categories",
              "host": [ "{{baseUrl}}" ],
              "path": [ "api", "category", "categories" ]
            }
          }
        }
      ]
    },
    {
      "name": "Products",
      "item": [
        {
          "name": "Create Product",
          "request": {
            "method": "POST",
            "header": [ { "key": "Content-Type", "value": "application/json" }, { "key": "Authorization", "value": "{{authHeader}}" } ],
            "body": { "mode": "raw", "raw": "{\n  \"name\": \"Tênis Esportivo\",\n  \"description\": \"Tênis confortável para corrida\",\n  \"price\": 299.90,\n  \"category\": [ \"{{categoryId}}\" ],\n  \"stock\": 15\n}" },
            "url": {
              "raw": "{{baseUrl}}/api/product/products/create",
              "host": [ "{{baseUrl}}" ],
              "path": [ "api", "product", "products", "create" ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const jsonData = pm.response.json();",
                  "if (jsonData._id) pm.collectionVariables.set('productId', jsonData._id);"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "List Products",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/product/products",
              "host": [ "{{baseUrl}}" ],
              "path": [ "api", "product", "products" ]
            }
          }
        },
        {
          "name": "Get Product By Id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/product/products/{{productId}}",
              "host": [ "{{baseUrl}}" ],
              "path": [ "api", "product", "products", "{{productId}}" ]
            }
          }
        }
      ]
    },
    {
      "name": "Cart",
      "item": [
        {
          "name": "Add Products To Cart",
          "request": {
            "method": "POST",
            "header": [ { "key": "Content-Type", "value": "application/json" }, { "key": "Authorization", "value": "{{authHeader}}" } ],
            "body": { "mode": "raw", "raw": "{\n  \"products\": [ { \"_id\": \"{{productId}}\", \"quantity\": 2 } ]\n}" },
            "url": {
              "raw": "{{baseUrl}}/api/cart/carts/products",
              "host": [ "{{baseUrl}}" ],
              "path": [ "api", "cart", "carts", "products" ]
            }
          }
        },
        {
          "name": "Get My Cart",
          "request": {
            "method": "GET",
            "header": [ { "key": "Authorization", "value": "{{authHeader}}" } ],
            "url": {
              "raw": "{{baseUrl}}/api/cart/cart",
              "host": [ "{{baseUrl}}" ],
              "path": [ "api", "cart", "cart" ]
            }
          }
        },
        {
          "name": "Pay Cart",
          "request": {
            "method": "POST",
            "header": [ { "key": "Content-Type", "value": "application/json" }, { "key": "Authorization", "value": "{{authHeader}}" } ],
            "body": { "mode": "raw", "raw": "{\n  \"paymentMethod\": \"credit_card\",\n  \"transactionId\": \"tx_123456\"\n}" },
            "url": {
              "raw": "{{baseUrl}}/api/cart/pay",
              "host": [ "{{baseUrl}}" ],
              "path": [ "api", "cart", "pay" ]
            }
          }
        }
      ]
    }
  ]
}
